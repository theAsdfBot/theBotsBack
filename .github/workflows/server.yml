# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: BotNet Server

on: [push]

jobs:
  # Ensure tests pass
  Tests:
    runs-on: ubuntu-latest
    container:
      image: node:12
    services:
      postgres:
        image: latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345
          POSTGRES_DB: test
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    # "checkout" this repo in Github's CI environment
    - uses: actions/checkout@v2
    # Install dependencies
    - name: Install dependencies
      run: npm ci
    # Run tests
    - name: Run tests
      run: npm test
  
  # Ensure code is linted
  Lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    # "checkout" this repo in Github's CI environment
    - uses: actions/checkout@v2
    # Install node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # Install dependencies
    - name: Install dependencies
      run: npm ci
    # Run lint
    - name: Run linter
      run: npm run lint

  # Ensure TS compiles
  Compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    # "checkout" this repo in Github's CI environment
    - uses: actions/checkout@v2
    # Install node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # Install dependencies
    - name: Install dependencies
      run: npm ci
    # Compile
    - name: Compile TypeScript
      run: npm run build
